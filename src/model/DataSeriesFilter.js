/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SematextCloudApi) {
      root.SematextCloudApi = {};
    }
    root.SematextCloudApi.DataSeriesFilter = factory(root.SematextCloudApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The DataSeriesFilter model module.
   * @module model/DataSeriesFilter
   * @version v3
   */

  /**
   * Constructs a new <code>DataSeriesFilter</code>.
   * @alias module:model/DataSeriesFilter
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>DataSeriesFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DataSeriesFilter} obj Optional instance to populate.
   * @return {module:model/DataSeriesFilter} The populated <code>DataSeriesFilter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('aggregation'))
        obj.aggregation = ApiClient.convertToType(data['aggregation'], 'String');
      if (data.hasOwnProperty('multiValue'))
        obj.multiValue = ApiClient.convertToType(data['multiValue'], 'Boolean');
      if (data.hasOwnProperty('values'))
        obj.values = ApiClient.convertToType(data['values'], ['String']);
    }
    return obj;
  }

  /**
   * @member {module:model/DataSeriesFilter.AggregationEnum} aggregation
   */
  exports.prototype.aggregation = undefined;

  /**
   * @member {Boolean} multiValue
   */
  exports.prototype.multiValue = undefined;

  /**
   * @member {Array.<String>} values
   */
  exports.prototype.values = undefined;


  /**
   * Allowed values for the <code>aggregation</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AggregationEnum = {
    /**
     * value: "NONE"
     * @const
     */
    NONE: "NONE",

    /**
     * value: "SUM"
     * @const
     */
    SUM: "SUM",

    /**
     * value: "AVG"
     * @const
     */
    AVG: "AVG",

    /**
     * value: "MIN"
     * @const
     */
    MIN: "MIN",

    /**
     * value: "MAX"
     * @const
     */
    MAX: "MAX"
  };

  return exports;

}));
