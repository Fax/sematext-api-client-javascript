/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SematextCloudApi) {
      root.SematextCloudApi = {};
    }
    root.SematextCloudApi.UserRole = factory(root.SematextCloudApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The UserRole model module.
   * @module model/UserRole
   * @version v3
   */

  /**
   * Constructs a new <code>UserRole</code>.
   * @alias module:model/UserRole
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>UserRole</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserRole} obj Optional instance to populate.
   * @return {module:model/UserRole} The populated <code>UserRole</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('role'))
        obj.role = ApiClient.convertToType(data['role'], 'String');
      if (data.hasOwnProperty('roleStatus'))
        obj.roleStatus = ApiClient.convertToType(data['roleStatus'], 'String');
      if (data.hasOwnProperty('userEmail'))
        obj.userEmail = ApiClient.convertToType(data['userEmail'], 'String');
    }
    return obj;
  }

  /**
   * @member {module:model/UserRole.RoleEnum} role
   */
  exports.prototype.role = undefined;

  /**
   * @member {module:model/UserRole.RoleStatusEnum} roleStatus
   */
  exports.prototype.roleStatus = undefined;

  /**
   * @member {String} userEmail
   */
  exports.prototype.userEmail = undefined;


  /**
   * Allowed values for the <code>role</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RoleEnum = {
    /**
     * value: "SUPER_USER"
     * @const
     */
    SUPER_USER: "SUPER_USER",

    /**
     * value: "OWNER"
     * @const
     */
    OWNER: "OWNER",

    /**
     * value: "ADMIN"
     * @const
     */
    ADMIN: "ADMIN",

    /**
     * value: "USER"
     * @const
     */
    USER: "USER",

    /**
     * value: "DEMO"
     * @const
     */
    DEMO: "DEMO",

    /**
     * value: "ANONYMOUS"
     * @const
     */
    ANONYMOUS: "ANONYMOUS"
  };


  /**
   * Allowed values for the <code>roleStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RoleStatusEnum = {
    /**
     * value: "INACTIVE"
     * @const
     */
    INACTIVE: "INACTIVE",

    /**
     * value: "ACTIVE"
     * @const
     */
    ACTIVE: "ACTIVE"
  };

  return exports;

}));
