/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SematextCloudApi) {
      root.SematextCloudApi = {};
    }
    root.SematextCloudApi.Plan = factory(root.SematextCloudApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Plan model module.
   * @module model/Plan
   * @version v3
   */

  /**
   * Constructs a new <code>Plan</code>.
   * @alias module:model/Plan
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Plan</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Plan} obj Optional instance to populate.
   * @return {module:model/Plan} The populated <code>Plan</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('appType'))
        obj.appType = ApiClient.convertToType(data['appType'], 'String');
      if (data.hasOwnProperty('custom'))
        obj.custom = ApiClient.convertToType(data['custom'], 'Boolean');
      if (data.hasOwnProperty('dataRetentionHours'))
        obj.dataRetentionHours = ApiClient.convertToType(data['dataRetentionHours'], 'Number');
      if (data.hasOwnProperty('defaultTrialPlan'))
        obj.defaultTrialPlan = ApiClient.convertToType(data['defaultTrialPlan'], 'Boolean');
      if (data.hasOwnProperty('free'))
        obj.free = ApiClient.convertToType(data['free'], 'Boolean');
      if (data.hasOwnProperty('freeTrialDays'))
        obj.freeTrialDays = ApiClient.convertToType(data['freeTrialDays'], 'Number');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('maxAlerts'))
        obj.maxAlerts = ApiClient.convertToType(data['maxAlerts'], 'Number');
      if (data.hasOwnProperty('maxDailyEvents'))
        obj.maxDailyEvents = ApiClient.convertToType(data['maxDailyEvents'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('planScheme'))
        obj.planScheme = ApiClient.convertToType(data['planScheme'], 'String');
      if (data.hasOwnProperty('sematextService'))
        obj.sematextService = ApiClient.convertToType(data['sematextService'], 'String');
      if (data.hasOwnProperty('trialPlan'))
        obj.trialPlan = ApiClient.convertToType(data['trialPlan'], 'Boolean');
    }
    return obj;
  }

  /**
   * @member {String} appType
   */
  exports.prototype.appType = undefined;

  /**
   * @member {Boolean} custom
   */
  exports.prototype.custom = undefined;

  /**
   * @member {Number} dataRetentionHours
   */
  exports.prototype.dataRetentionHours = undefined;

  /**
   * @member {Boolean} defaultTrialPlan
   */
  exports.prototype.defaultTrialPlan = undefined;

  /**
   * @member {Boolean} free
   */
  exports.prototype.free = undefined;

  /**
   * @member {Number} freeTrialDays
   */
  exports.prototype.freeTrialDays = undefined;

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {Number} maxAlerts
   */
  exports.prototype.maxAlerts = undefined;

  /**
   * @member {Number} maxDailyEvents
   */
  exports.prototype.maxDailyEvents = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {module:model/Plan.PlanSchemeEnum} planScheme
   */
  exports.prototype.planScheme = undefined;

  /**
   * @member {module:model/Plan.SematextServiceEnum} sematextService
   */
  exports.prototype.sematextService = undefined;

  /**
   * @member {Boolean} trialPlan
   */
  exports.prototype.trialPlan = undefined;


  /**
   * Allowed values for the <code>planScheme</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PlanSchemeEnum = {
    /**
     * value: "SPM_1_0"
     * @const
     */
    sPM10: "SPM_1_0",

    /**
     * value: "SPM_2_0"
     * @const
     */
    sPM20: "SPM_2_0",

    /**
     * value: "SA_1_0"
     * @const
     */
    sA10: "SA_1_0",

    /**
     * value: "SEARCHENE_1_0"
     * @const
     */
    sEARCHENE10: "SEARCHENE_1_0",

    /**
     * value: "LOGSENE_1_0"
     * @const
     */
    lOGSENE10: "LOGSENE_1_0",

    /**
     * value: "LOGSENE_2_0"
     * @const
     */
    lOGSENE20: "LOGSENE_2_0",

    /**
     * value: "RUM_1_0"
     * @const
     */
    rUM10: "RUM_1_0",

    /**
     * value: "RUM_EA"
     * @const
     */
    RUM_EA: "RUM_EA",

    /**
     * value: "SYNTHETICS_1_0"
     * @const
     */
    sYNTHETICS10: "SYNTHETICS_1_0"
  };


  /**
   * Allowed values for the <code>sematextService</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SematextServiceEnum = {
    /**
     * value: "LOGSENE"
     * @const
     */
    LOGSENE: "LOGSENE",

    /**
     * value: "SPM"
     * @const
     */
    SPM: "SPM",

    /**
     * value: "RUM"
     * @const
     */
    RUM: "RUM",

    /**
     * value: "SYNTHETICS"
     * @const
     */
    SYNTHETICS: "SYNTHETICS"
  };

  return exports;

}));
