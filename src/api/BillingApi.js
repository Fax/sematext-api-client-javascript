/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BillingInfo', 'model/GenericApiResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BillingInfo'), require('../model/GenericApiResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.SematextCloudApi) {
      root.SematextCloudApi = {};
    }
    root.SematextCloudApi.BillingApi = factory(root.SematextCloudApi.ApiClient, root.SematextCloudApi.BillingInfo, root.SematextCloudApi.GenericApiResponse);
  }
}(this, function(ApiClient, BillingInfo, GenericApiResponse) {
  'use strict';

  /**
   * Billing service.
   * @module api/BillingApi
   * @version v3
   */

  /**
   * Constructs a new BillingApi. 
   * @alias module:api/BillingApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getDetailedInvoiceUsingGET operation.
     * @callback module:api/BillingApi~getDetailedInvoiceUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericApiResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get invoice details
     * @param {String} service service
     * @param {Number} year year
     * @param {Number} month month
     * @param {module:api/BillingApi~getDetailedInvoiceUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericApiResponse}
     */
    this.getDetailedInvoiceUsingGET = function(service, year, month, callback) {
      var postBody = null;

      // verify the required parameter 'service' is set
      if (service === undefined || service === null) {
        throw new Error("Missing the required parameter 'service' when calling getDetailedInvoiceUsingGET");
      }

      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling getDetailedInvoiceUsingGET");
      }

      // verify the required parameter 'month' is set
      if (month === undefined || month === null) {
        throw new Error("Missing the required parameter 'month' when calling getDetailedInvoiceUsingGET");
      }


      var pathParams = {
        'service': service,
        'year': year,
        'month': month
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GenericApiResponse;

      return this.apiClient.callApi(
        '/users-web/api/v3/billing/invoice/{service}/{year}/{month}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listAvailablePlansUsingGET operation.
     * @callback module:api/BillingApi~listAvailablePlansUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericApiResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get available plans
     * @param {Object} opts Optional parameters
     * @param {Number} opts.integrationId integrationId
     * @param {String} opts.appType appType
     * @param {module:api/BillingApi~listAvailablePlansUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericApiResponse}
     */
    this.listAvailablePlansUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'integrationId': opts['integrationId'],
        'appType': opts['appType'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GenericApiResponse;

      return this.apiClient.callApi(
        '/users-web/api/v3/billing/availablePlans', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePlanUsingPUT operation.
     * @callback module:api/BillingApi~updatePlanUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericApiResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update plan for an app
     * @param {Number} appId appId
     * @param {module:model/BillingInfo} dto dto
     * @param {module:api/BillingApi~updatePlanUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericApiResponse}
     */
    this.updatePlanUsingPUT = function(appId, dto, callback) {
      var postBody = dto;

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling updatePlanUsingPUT");
      }

      // verify the required parameter 'dto' is set
      if (dto === undefined || dto === null) {
        throw new Error("Missing the required parameter 'dto' when calling updatePlanUsingPUT");
      }


      var pathParams = {
        'appId': appId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GenericApiResponse;

      return this.apiClient.callApi(
        '/users-web/api/v3/billing/info/{appId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
