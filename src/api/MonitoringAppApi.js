/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreateAppInfo', 'model/GenericApiResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CreateAppInfo'), require('../model/GenericApiResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.SematextCloudApi) {
      root.SematextCloudApi = {};
    }
    root.SematextCloudApi.MonitoringAppApi = factory(root.SematextCloudApi.ApiClient, root.SematextCloudApi.CreateAppInfo, root.SematextCloudApi.GenericApiResponse);
  }
}(this, function(ApiClient, CreateAppInfo, GenericApiResponse) {
  'use strict';

  /**
   * MonitoringApp service.
   * @module api/MonitoringAppApi
   * @version v3
   */

  /**
   * Constructs a new MonitoringAppApi. 
   * @alias module:api/MonitoringAppApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createSpmApplication operation.
     * @callback module:api/MonitoringAppApi~createSpmApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericApiResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Monitoring App
     * @param {module:model/CreateAppInfo} applicationDetails Details of the application to be created
     * @param {module:api/MonitoringAppApi~createSpmApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericApiResponse}
     */
    this.createSpmApplication = function(applicationDetails, callback) {
      var postBody = applicationDetails;

      // verify the required parameter 'applicationDetails' is set
      if (applicationDetails === undefined || applicationDetails === null) {
        throw new Error("Missing the required parameter 'applicationDetails' when calling createSpmApplication");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GenericApiResponse;

      return this.apiClient.callApi(
        '/spm-reports/api/v3/apps', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
