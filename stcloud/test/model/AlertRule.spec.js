/**
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SematextApiClientJavascript);
  }
}(this, function (expect, SematextApiClientJavascript) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new SematextApiClientJavascript.AlertRule();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlertRule', function () {
    it('should create an instance of AlertRule', function () {
      // uncomment below and update the code to test AlertRule
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be.a(SematextApiClientJavascript.AlertRule);
    });

    it('should have the property accountEmail (base name: "accountEmail")', function () {
      // uncomment below and update the code to test the property accountEmail
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property allowedAppTypes (base name: "allowedAppTypes")', function () {
      // uncomment below and update the code to test the property allowedAppTypes
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property analyzingTime (base name: "analyzingTime")', function () {
      // uncomment below and update the code to test the property analyzingTime
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property appDisplayState (base name: "appDisplayState")', function () {
      // uncomment below and update the code to test the property appDisplayState
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function () {
      // uncomment below and update the code to test the property appId
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property appName (base name: "appName")', function () {
      // uncomment below and update the code to test the property appName
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property appState (base name: "appState")', function () {
      // uncomment below and update the code to test the property appState
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property appToken (base name: "appToken")', function () {
      // uncomment below and update the code to test the property appToken
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property appType (base name: "appType")', function () {
      // uncomment below and update the code to test the property appType
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property backToNormalNeeded (base name: "backToNormalNeeded")', function () {
      // uncomment below and update the code to test the property backToNormalNeeded
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property chartKey (base name: "chartKey")', function () {
      // uncomment below and update the code to test the property chartKey
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function () {
      // uncomment below and update the code to test the property color
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property creatorEmail (base name: "creatorEmail")', function () {
      // uncomment below and update the code to test the property creatorEmail
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property defaultAggType (base name: "defaultAggType")', function () {
      // uncomment below and update the code to test the property defaultAggType
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function () {
      // uncomment below and update the code to test the property description
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property disallowedAppTypes (base name: "disallowedAppTypes")', function () {
      // uncomment below and update the code to test the property disallowedAppTypes
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function () {
      // uncomment below and update the code to test the property enabled
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property estimateOperation (base name: "estimateOperation")', function () {
      // uncomment below and update the code to test the property estimateOperation
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property estimateValue (base name: "estimateValue")', function () {
      // uncomment below and update the code to test the property estimateValue
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property filterValues (base name: "filterValues")', function () {
      // uncomment below and update the code to test the property filterValues
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property filterValuesObj (base name: "filterValuesObj")', function () {
      // uncomment below and update the code to test the property filterValuesObj
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property ignoreRegularEventsEnabled (base name: "ignoreRegularEventsEnabled")', function () {
      // uncomment below and update the code to test the property ignoreRegularEventsEnabled
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property integrations (base name: "integrations")', function () {
      // uncomment below and update the code to test the property integrations
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property lastDataReceivedDate (base name: "lastDataReceivedDate")', function () {
      // uncomment below and update the code to test the property lastDataReceivedDate
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property lastSent (base name: "lastSent")', function () {
      // uncomment below and update the code to test the property lastSent
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property lastTriggered (base name: "lastTriggered")', function () {
      // uncomment below and update the code to test the property lastTriggered
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function () {
      // uncomment below and update the code to test the property metadata
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property metricKey (base name: "metricKey")', function () {
      // uncomment below and update the code to test the property metricKey
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property metricLabel (base name: "metricLabel")', function () {
      // uncomment below and update the code to test the property metricLabel
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property minDelayBetweenNotificationsInMinutes (base name: "minDelayBetweenNotificationsInMinutes")', function () {
      // uncomment below and update the code to test the property minDelayBetweenNotificationsInMinutes
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function () {
      // uncomment below and update the code to test the property name
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property notificationEmails (base name: "notificationEmails")', function () {
      // uncomment below and update the code to test the property notificationEmails
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property notificationIntegrations (base name: "notificationIntegrations")', function () {
      // uncomment below and update the code to test the property notificationIntegrations
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property notificationsEnabled (base name: "notificationsEnabled")', function () {
      // uncomment below and update the code to test the property notificationsEnabled
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property query (base name: "query")', function () {
      // uncomment below and update the code to test the property query
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property reportName (base name: "reportName")', function () {
      // uncomment below and update the code to test the property reportName
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property ruleKey (base name: "ruleKey")', function () {
      // uncomment below and update the code to test the property ruleKey
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property ruleType (base name: "ruleType")', function () {
      // uncomment below and update the code to test the property ruleType
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property runbook (base name: "runbook")', function () {
      // uncomment below and update the code to test the property runbook
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property savedQueryId (base name: "savedQueryId")', function () {
      // uncomment below and update the code to test the property savedQueryId
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property schedule (base name: "schedule")', function () {
      // uncomment below and update the code to test the property schedule
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property sematextService (base name: "sematextService")', function () {
      // uncomment below and update the code to test the property sematextService
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property sendToEmail (base name: "sendToEmail")', function () {
      // uncomment below and update the code to test the property sendToEmail
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function () {
      // uncomment below and update the code to test the property timezone
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property useOnlyAlertRuleIntegrations (base name: "useOnlyAlertRuleIntegrations")', function () {
      // uncomment below and update the code to test the property useOnlyAlertRuleIntegrations
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property userPermissions (base name: "userPermissions")', function () {
      // uncomment below and update the code to test the property userPermissions
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property valueColumnName (base name: "valueColumnName")', function () {
      // uncomment below and update the code to test the property valueColumnName
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property valueName (base name: "valueName")', function () {
      // uncomment below and update the code to test the property valueName
      //var instane = new SematextApiClientJavascript.AlertRule();
      //expect(instance).to.be();
    });

  });

}));
