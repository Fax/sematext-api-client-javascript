/**
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SematextApiClientJavascript);
  }
}(this, function (expect, SematextApiClientJavascript) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new SematextApiClientJavascript.DayUsageData();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DayUsageData', function () {
    it('should create an instance of DayUsageData', function () {
      // uncomment below and update the code to test DayUsageData
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be.a(SematextApiClientJavascript.DayUsageData);
    });

    it('should have the property countDailyDataPoints (base name: "countDailyDataPoints")', function () {
      // uncomment below and update the code to test the property countDailyDataPoints
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "day")', function () {
      // uncomment below and update the code to test the property day
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "discount")', function () {
      // uncomment below and update the code to test the property discount
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property dpmPerContainerHostQuota (base name: "dpmPerContainerHostQuota")', function () {
      // uncomment below and update the code to test the property dpmPerContainerHostQuota
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property dpmPerHostQuota (base name: "dpmPerHostQuota")', function () {
      // uncomment below and update the code to test the property dpmPerHostQuota
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property fixedMonthlyPrice (base name: "fixedMonthlyPrice")', function () {
      // uncomment below and update the code to test the property fixedMonthlyPrice
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property fixedMonthlyPricePerHour (base name: "fixedMonthlyPricePerHour")', function () {
      // uncomment below and update the code to test the property fixedMonthlyPricePerHour
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property freeContainersPerHost (base name: "freeContainersPerHost")', function () {
      // uncomment below and update the code to test the property freeContainersPerHost
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function () {
      // uncomment below and update the code to test the property id
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property kiloDpmOveragePricePerHour (base name: "kiloDpmOveragePricePerHour")', function () {
      // uncomment below and update the code to test the property kiloDpmOveragePricePerHour
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property planType (base name: "planType")', function () {
      // uncomment below and update the code to test the property planType
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property pricePerContainerHostHour (base name: "pricePerContainerHostHour")', function () {
      // uncomment below and update the code to test the property pricePerContainerHostHour
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property pricePerContainerHour (base name: "pricePerContainerHour")', function () {
      // uncomment below and update the code to test the property pricePerContainerHour
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property pricePerServerHour (base name: "pricePerServerHour")', function () {
      // uncomment below and update the code to test the property pricePerServerHour
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property sumNumberOfContainerHosts (base name: "sumNumberOfContainerHosts")', function () {
      // uncomment below and update the code to test the property sumNumberOfContainerHosts
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property sumNumberOfContainers (base name: "sumNumberOfContainers")', function () {
      // uncomment below and update the code to test the property sumNumberOfContainers
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property sumNumberOfServers (base name: "sumNumberOfServers")', function () {
      // uncomment below and update the code to test the property sumNumberOfServers
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property usageAmount (base name: "usageAmount")', function () {
      // uncomment below and update the code to test the property usageAmount
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property usedPlan (base name: "usedPlan")', function () {
      // uncomment below and update the code to test the property usedPlan
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

    it('should have the property userDiscount (base name: "userDiscount")', function () {
      // uncomment below and update the code to test the property userDiscount
      //var instane = new SematextApiClientJavascript.DayUsageData();
      //expect(instance).to.be();
    });

  });

}));
