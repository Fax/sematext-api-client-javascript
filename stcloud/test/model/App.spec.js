/**
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SematextApiClientJavascript);
  }
}(this, function (expect, SematextApiClientJavascript) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new SematextApiClientJavascript.App();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('App', function () {
    it('should create an instance of App', function () {
      // uncomment below and update the code to test App
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be.a(SematextApiClientJavascript.App);
    });

    it('should have the property ajaxThreshold (base name: "ajaxThreshold")', function () {
      // uncomment below and update the code to test the property ajaxThreshold
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property appType (base name: "appType")', function () {
      // uncomment below and update the code to test the property appType
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property appTypeId (base name: "appTypeId")', function () {
      // uncomment below and update the code to test the property appTypeId
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property creatorEmail (base name: "creatorEmail")', function () {
      // uncomment below and update the code to test the property creatorEmail
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property creditCardExpiry (base name: "creditCardExpiry")', function () {
      // uncomment below and update the code to test the property creditCardExpiry
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property creditCardNumber (base name: "creditCardNumber")', function () {
      // uncomment below and update the code to test the property creditCardNumber
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function () {
      // uncomment below and update the code to test the property description
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property displayStatus (base name: "displayStatus")', function () {
      // uncomment below and update the code to test the property displayStatus
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property firstDataSavedDate (base name: "firstDataSavedDate")', function () {
      // uncomment below and update the code to test the property firstDataSavedDate
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function () {
      // uncomment below and update the code to test the property id
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property integration (base name: "integration")', function () {
      // uncomment below and update the code to test the property integration
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property lastDataReceivedDate (base name: "lastDataReceivedDate")', function () {
      // uncomment below and update the code to test the property lastDataReceivedDate
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property lastDataSavedDate (base name: "lastDataSavedDate")', function () {
      // uncomment below and update the code to test the property lastDataSavedDate
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property loggedInUserAppRole (base name: "loggedInUserAppRole")', function () {
      // uncomment below and update the code to test the property loggedInUserAppRole
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property monthlyInvoiceAccount (base name: "monthlyInvoiceAccount")', function () {
      // uncomment below and update the code to test the property monthlyInvoiceAccount
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function () {
      // uncomment below and update the code to test the property name
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property ownerEmail (base name: "ownerEmail")', function () {
      // uncomment below and update the code to test the property ownerEmail
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property owningOrganization (base name: "owningOrganization")', function () {
      // uncomment below and update the code to test the property owningOrganization
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property pageLoadThreshold (base name: "pageLoadThreshold")', function () {
      // uncomment below and update the code to test the property pageLoadThreshold
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodId (base name: "paymentMethodId")', function () {
      // uncomment below and update the code to test the property paymentMethodId
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property plan (base name: "plan")', function () {
      // uncomment below and update the code to test the property plan
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property prepaidAccount (base name: "prepaidAccount")', function () {
      // uncomment below and update the code to test the property prepaidAccount
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property readToken (base name: "readToken")', function () {
      // uncomment below and update the code to test the property readToken
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property readWriteToken (base name: "readWriteToken")', function () {
      // uncomment below and update the code to test the property readWriteToken
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property registrationDate (base name: "registrationDate")', function () {
      // uncomment below and update the code to test the property registrationDate
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function () {
      // uncomment below and update the code to test the property status
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function () {
      // uncomment below and update the code to test the property token
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property tokens (base name: "tokens")', function () {
      // uncomment below and update the code to test the property tokens
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property trialEndDate (base name: "trialEndDate")', function () {
      // uncomment below and update the code to test the property trialEndDate
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property urlGroupLimit (base name: "urlGroupLimit")', function () {
      // uncomment below and update the code to test the property urlGroupLimit
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property userRoles (base name: "userRoles")', function () {
      // uncomment below and update the code to test the property userRoles
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

    it('should have the property writeToken (base name: "writeToken")', function () {
      // uncomment below and update the code to test the property writeToken
      //var instane = new SematextApiClientJavascript.App();
      //expect(instance).to.be();
    });

  });

}));
